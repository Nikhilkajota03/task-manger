deployment to a aws lamda 


1) go to the folder of backend 

2) then run command npm install -g serverless  to install serverless 

3) now we want a template for setting the serverless configuration 

  serverless create -t aws-nodejs

  it will just give the handle.js and serverless.yml

example:- 

------------------------app.js-----------------------------------------------------------------------

const serverless = require("serverless-http");
const express = require("express");
const app = express();
const cors = require("cors");
require("./conn/conn");
const path = require("path");
const auth = require("./routes/auth");
const list = require("./routes/list");
app.use(express.json());
app.use(cors());

app.use("/api/v1", auth);
app.use("/api/v2", list);

app.get("/", (req, res) => {

    res.send("on home route")

  // app.use(express.static(path.resolve(__dirname, "frontend", "build")));
  // res.sendFile(path.resolve(__dirname, "frontend", "build", "index.html"));
});

module.exports.handler = serverless(app)



-------------------------serverless-yml--------------------------------------------------------------------

service: daily-app

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-south-1

functions:
  hello:
    handler: app.handler
    events:
      - httpApi:
          path: /
          method: GET
      - httpApi:
          path: /api/v1/{proxy+}
          method: ANY
      - httpApi:
          path: /api/v2/{proxy+}
          method: ANY

   


4) to deploy the application we need to give the user 
 now make a role in i am and give the admistration policy to the user copy key pair 
 now create access key 

serverless config credentials --provider aws --key YOUR_ACCESS_KEY --secret YOUR_SECRET_KEY  --overwrite
serverless config credentials --provider aws --key AKIAQT2PZ2X2IQIYPV7C --secret hvKTVSa7azcKAt+r5JXgvIxhPsJNh8HH+dGSP4ku --overwrite



set AWS_ACCESS_KEY_ID=AKIAQT2PZ2X2IQIYPV7C
set AWS_SECRET_ACCESS_KEY=your_secret_key



5) run command to deploy the project 
  serverless deploy 







   



